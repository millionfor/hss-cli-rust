name: Rust CI

on:
  push:
    branches: [ main, master ]
    tags: [ '*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build on ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install build dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}
        # 交叉编译平台（如 aarch64-apple-darwin）可能无法直接运行测试，可根据需要调整
        continue-on-error: ${{ matrix.target == 'aarch64-apple-darwin' }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/hss-cli-rust

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: target/${{ matrix.target }}/release/hss-cli-rust
